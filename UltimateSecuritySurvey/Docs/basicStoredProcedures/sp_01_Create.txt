CREATE PROCEDURE [dbo].[sp_01_CreateTables]
AS

--Independent Tables--
CREATE TABLE [dbo].[UserAccount]
(
	[userId]	INTEGER		IDENTITY(11,1)	NOT NULL,
	[firstName]	VARCHAR(100)				NOT NULL,
	[lastName]	VARCHAR(100)				NOT NULL,
	[email]		VARCHAR(100)				NOT NULL,
	[phone]		VARCHAR(100),
	[userName]	VARCHAR(50)					NOT NULL,
	[password]	VARCHAR(30)					NOT NULL,
	[isTeacher] BIT							NOT NULL

	CONSTRAINT [PK_UserAccount] PRIMARY KEY CLUSTERED ([userId] ASC),
	UNIQUE NONCLUSTERED ([email] ASC),
	UNIQUE NONCLUSTERED ([userName] ASC)
);

CREATE TABLE [dbo].[Customer]
(
	[customerId]		INTEGER		IDENTITY(11,1)	NOT NULL,
	[companyName]		VARCHAR(100)				NOT NULL,
	[contactFirstName]	VARCHAR(100)				NOT NULL,
	[contactLastName]	VARCHAR(100)				NOT NULL,
	[email]				VARCHAR(100)				NOT NULL,
	[phone]				VARCHAR(100)

	CONSTRAINT [PK_Customer] PRIMARY KEY CLUSTERED ([customerId] ASC),
	UNIQUE NONCLUSTERED ([email] ASC)
);

CREATE TABLE [dbo].[QuestionType]
(
	[questionTypeId]	INTEGER		NOT NULL,
	[questionTypeName]	VARCHAR(50) NOT NULL,
	[description]		VARCHAR(300)

	CONSTRAINT [PK_QuestionType] PRIMARY KEY CLUSTERED ([questionTypeId] ASC),
    UNIQUE NONCLUSTERED ([questionTypeName] ASC)
);

CREATE TABLE [dbo].[QuestionCategory]
(
	[categoryId]	INTEGER		IDENTITY(1,1)	NOT NULL,
	[categoryName]	VARCHAR(50)					NOT NULL,
	[description]	VARCHAR(300)

	CONSTRAINT [PK_QuestionCategory] PRIMARY KEY CLUSTERED ([categoryId] ASC),
    UNIQUE NONCLUSTERED ([categoryName] ASC)
);

CREATE TABLE [dbo].[ObserverStatus]
(
	[statusValue]	INTEGER			NOT NULL,
	[description]	VARCHAR(100)	NOT NULL

	CONSTRAINT [PK_ObserverStatus] PRIMARY KEY CLUSTERED ([statusValue] ASC),
	CONSTRAINT [chk_ObservedStatus_statusValue] CHECK (statusValue >= -3 AND statusValue <= 3)
);

CREATE TABLE [dbo].[AnswerStatus]
(
	[statusValue]	INTEGER			NOT NULL,
	[description]	VARCHAR(100)	NOT NULL

	CONSTRAINT [PK_AnswerStatus] PRIMARY KEY CLUSTERED ([statusValue] ASC),
	CONSTRAINT [chk_AnswerStatus_statusValue] CHECK (statusValue >= 0 AND statusValue <= 3)
);

-- First level Dependency tables
CREATE TABLE [dbo].[GenericSurvey]
(
	[surveyId]			INTEGER			IDENTITY(11,1)	NOT NULL,
	[title]				VARCHAR(100)					NOT NULL,
	[description]		VARCHAR(MAX)					NOT NULL,
	[baseLevel]			INTEGER							NOT NULL,
	[supervisorUserId]	INTEGER							NOT NULL

	CONSTRAINT [PK_GenericSurvey] PRIMARY KEY CLUSTERED ([surveyId] ASC),
	CONSTRAINT [FK_GenericSurvey_ToUserAccount] FOREIGN KEY ([supervisorUserId]) REFERENCES [dbo].[UserAccount] ([userId])
);

CREATE TABLE [dbo].[Question]
(
	[questionId]				INTEGER			IDENTITY(101,1)	NOT NULL,
	[categoryId]				INTEGER							NOT NULL,
	[questionTypeId]			INTEGER							NOT NULL,
	[questionTextMain]			VARCHAR(MAX)					NOT NULL,
	[questionTextExtra]			VARCHAR(1000),
	[baseLevel2RequirementText] VARCHAR(MAX)					NOT NULL,
	[additionalInfo]			VARCHAR(MAX),
	[additionalNote]			VARCHAR(MAX), 

	CONSTRAINT [PK_Question] PRIMARY KEY CLUSTERED ([questionId] ASC),
    CONSTRAINT [FK_Question_ToQuestionCategory] FOREIGN KEY ([categoryId]) REFERENCES [dbo].[QuestionCategory] ([categoryId]),
    CONSTRAINT [FK_Question_ToQuestionType] FOREIGN KEY ([questionTypeId]) REFERENCES [dbo].[QuestionType] ([questionTypeId])
);

--Second level Dependency Tables
CREATE TABLE [dbo].[AnswerOption]
(
	[questionId]	INTEGER							NOT NULL,
	[answerNumber]	INTEGER			IDENTITY(1,1)	NOT NULL,
	[answerText]	VARCHAR(1000)					NOT NULL

	CONSTRAINT [PK_AnswerOption] PRIMARY KEY CLUSTERED ([questionId] ASC, [answerNumber] ASC), 
    CONSTRAINT [FK_AnswerOption_ToQuestion] FOREIGN KEY ([questionId]) REFERENCES [Question]([questionId])
);

CREATE TABLE [dbo].[SurveyQuestion]
(
	[surveyId]		INTEGER		NOT NULL,
	[questionId]	INTEGER		NOT NULL

	CONSTRAINT [PK_SurveyQuestion] PRIMARY KEY CLUSTERED ([surveyId] ASC, [questionId] ASC),
	CONSTRAINT [FK_SurveyQuestion_ToGenericSurvey] FOREIGN KEY ([surveyId]) REFERENCES [GenericSurvey]([surveyId]),
	CONSTRAINT [FK_SurveyQuestion_ToQuestion] FOREIGN KEY ([questionId]) REFERENCES [Question]([questionId])
);

CREATE TABLE [dbo].[CustomerSurvey]
(
	[surveyId]				INTEGER			IDENTITY(101,1)	NOT NULL,
	[customerSurveyTitle]	VARCHAR(100)					NOT NULL,
	
	[baseSurveyId]			INTEGER							NOT NULL,
	[customerId]			INTEGER							NOT NULL,
	[startDate]				DATETIME						NOT NULL,
	[startComment]			VARCHAR(1000)					NOT NULL,
	
	[observerUserId]		INTEGER							NOT NULL,
	[supervisorUserId]		INTEGER							NOT NULL,
	
	[endDate]				DATETIME,
	[endComment]			VARCHAR(1000)

	CONSTRAINT [PK_CustomerSurvey] PRIMARY KEY CLUSTERED ([surveyId] ASC),
	CONSTRAINT [FK_CustomerSurvey_ToGenericSurvey] FOREIGN KEY ([baseSurveyId]) REFERENCES [GenericSurvey]([surveyId]),
	CONSTRAINT [FK_CustomerSurvey_ToCustomer] FOREIGN KEY ([customerId]) REFERENCES [Customer]([customerId]),

	CONSTRAINT [FK_CustomerSurvey_ToObserver] FOREIGN KEY ([observerUserId]) REFERENCES [UserAccount]([userId]),
	CONSTRAINT [FK_CustomerSurvey_ToSupervisor] FOREIGN KEY ([supervisorUserId]) REFERENCES [UserAccount]([userId])
);

CREATE TABLE [dbo].[GenericCountermeasure]
(
	[countermeasureId]		INTEGER		IDENTITY(1001,1)	NOT NULL,
	[questionId]			INTEGER							NOT NULL,
	[title]					VARCHAR(100)					NOT NULL,
	[description]			VARCHAR(1000)					NOT NULL,
	[dateAndTime]			DATETIME						NOT NULL,
	[motherCountermeasure]	INTEGER

	CONSTRAINT [PK_GenericCountermeasure] PRIMARY KEY CLUSTERED([countermeasureId] ASC),
	CONSTRAINT [FK_GenericCountermeasure_ToQuestion] FOREIGN KEY ([questionId]) REFERENCES [Question]([questionId]),
	CONSTRAINT [FK_GenericCountermeasure_ToMother] 
				FOREIGN KEY ([motherCountermeasure]) REFERENCES [GenericCountermeasure]([countermeasureId])
);

--Third level Dependency
CREATE TABLE [dbo].[CustomerAnswer]
(
	[surveyId]						INTEGER						NOT NULL,
	[questionId]					INTEGER						NOT NULL,

	[answerOptionNumber]			INTEGER,
	[answerText]					VARCHAR(500)				NOT NULL,

	[answerStatusValue]				INTEGER			DEFAULT 0,
	[observerStatusValue]			INTEGER			DEFAULT 0,

	[countermeasureId1]				INTEGER,
	[countermeasureId2]				INTEGER,
	[countermeasureId3]				INTEGER,

	[observerComment]				VARCHAR(1000),
	[observerCommentDateAndTime]	DATETIME,

	[supervisorComment]				VARCHAR(1000),
	[supervisorCommentDateAndTime]	DATETIME

	CONSTRAINT [PK_CustomerAnswer] PRIMARY KEY CLUSTERED ([surveyId] ASC, [questionId] ASC),
	CONSTRAINT [FK_CustomerAnswer_ToCustomerSurvey] FOREIGN KEY ([surveyId])
						REFERENCES [CustomerSurvey]([surveyId]),

	CONSTRAINT [FK_CustomerAnswer_ToQuestion] FOREIGN KEY ([questionId]) REFERENCES [Question]([questionId]),
	CONSTRAINT [FK_CustomerAnswer_ToAnswerOption] FOREIGN KEY ([questionId], [answerOptionNumber])
						REFERENCES [AnswerOption]([questionId], [answerNumber]),

	CONSTRAINT [FK_CustomerAnswer_ToAnswerStatus] FOREIGN KEY ([answerStatusValue])
						REFERENCES [AnswerStatus]([statusValue]),
	CONSTRAINT [FK_CustomerAnswer_ToObserverStatus] FOREIGN KEY ([observerStatusValue])
						REFERENCES [ObserverStatus]([statusValue]),

	CONSTRAINT [FK_CustomerAnswer_ToGenericCountermeasure_1] FOREIGN KEY ([countermeasureId1])
						REFERENCES [GenericCountermeasure]([countermeasureId]),
	CONSTRAINT [FK_CustomerAnswer_ToGenericCountermeasure_2] FOREIGN KEY ([countermeasureId2])
						REFERENCES [GenericCountermeasure]([countermeasureId]),
	CONSTRAINT [FK_CustomerAnswer_ToGenericCountermeasure_3] FOREIGN KEY ([countermeasureId3])
						REFERENCES [GenericCountermeasure]([countermeasureId])

);

RETURN 1