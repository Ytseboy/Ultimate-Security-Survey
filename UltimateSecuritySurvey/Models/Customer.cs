//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UltimateSecuritySurvey.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    
    
    public partial class Customer
    {
        public Customer()
        {
            this.CustomerSurveys = new HashSet<CustomerSurvey>();
        }
    
        public int customerId { get; set; }

        [Required(ErrorMessage = "Company name is mandatory!")]
        [DisplayName("Company Name")]
        [StringLength(100, ErrorMessage = "Name value cannot exceed 100 characters.")]
        public string companyName { get; set; }

        [Required(ErrorMessage = "Contact's First Name is mandatory!")]
        [DisplayName("Contact First Name")]
        [StringLength(100, ErrorMessage = "Name value cannot exceed 100 characters.")]
        public string contactFirstName { get; set; }

        [Required(ErrorMessage = "Contact's Last Name is mandatory!")]
        [DisplayName("Contact Last Name")]
        [StringLength(100, ErrorMessage = "Name value cannot exceed 100 characters.")]
        public string contactLastName { get; set; }

        [Required(ErrorMessage = "Customer's Email is mandatory!")]
        [DataType(DataType.EmailAddress)]
        [DisplayName("Customer Email")]
        [StringLength(100, ErrorMessage = "Email cannot exceed 100 characters.")]
        public string email { get; set; }

      
        [DisplayName("Customer Phone Number")]
        [StringLength(100, ErrorMessage = "Phone number value cannot exceed 100 characters.")]
        public string phone { get; set; }
    
        public virtual ICollection<CustomerSurvey> CustomerSurveys { get; set; }
    }
}
