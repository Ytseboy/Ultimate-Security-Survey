//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UltimateSecuritySurvey.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    
    public partial class CustomerSurvey
    {
        public CustomerSurvey()
        {
            this.CustomerAnswers = new HashSet<CustomerAnswer>();
        }

        public int surveyId { get; set; }

        [Required(ErrorMessage = "Title is mandatory!")]
        [DisplayName("Title")]
        [StringLength(100, ErrorMessage = "Customer Survey Title value cannot exceed 100 characters.")]
        public string customerSurveyTitle { get; set; }

        [Required(ErrorMessage = "Base Generic Survey is mandatory!")]
        [DisplayName("Base Generic Survey")]
        public int baseSurveyId { get; set; }

        [Required(ErrorMessage = "Customer Company is mandatory!")]
        [DisplayName("Customer Company")]
        public int customerId { get; set; }

        [Required(ErrorMessage = "Start date is mandatory!")]
        [DisplayName("Start Date")]
        [DataType(DataType.DateTime)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:dd.MM.yyyy}")]
        public System.DateTime startDate { get; set; }

        [Required(ErrorMessage = "Start Comment is mandatory!")]
        [DisplayName("Start Comment")]
        [StringLength(1000, ErrorMessage = "Start Comment value cannot exceed 1000 characters.")]
        [DataType(DataType.MultilineText)]
        public string startComment { get; set; }

        [Required(ErrorMessage = "Observer User is mandatory!")]
        [DisplayName("Observer User")]
        public int observerUserId { get; set; }

        [Required(ErrorMessage = "Supervising Teacher is mandatory!")]
        [DisplayName("Supervising Teacher")]
        public int supervisorUserId { get; set; }

        [DisplayName("End Date")]
        [DataType(DataType.DateTime)]
        [DisplayFormat(ApplyFormatInEditMode = true, DataFormatString = "{0:dd.MM.yyyy}")]
        public Nullable<System.DateTime> endDate { get; set; }

        [DisplayName("End Comment")]
        [StringLength(8000, ErrorMessage = "End Comment value cannot exceed 8000 characters.")]
        [DataType(DataType.MultilineText)]
        public string endComment { get; set; }
    
        public virtual Customer Customer { get; set; }
        public virtual ICollection<CustomerAnswer> CustomerAnswers { get; set; }
        public virtual GenericSurvey GenericSurvey { get; set; }
        public virtual UserAccount UserAccount { get; set; }
        public virtual UserAccount UserAccount1 { get; set; }
    }
}
