@model UltimateSecuritySurvey.Models.CustomerAnswer

@{
    ViewBag.Title = "Validate";
    ViewBag.PageHeader = "Validate";
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>CustomerAnswer</legend>

        @Html.HiddenFor(model => model.surveyId)
        @Html.HiddenFor(model => model.questionId)
        @Html.HiddenFor(model => model.answerStatusValue)

        <div class="editor-label">
            @Html.LabelFor(model => model.answerOptionNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.answerOptionNumber)
            @Html.ValidationMessageFor(model => model.answerOptionNumber)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.answerText)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.answerText)
            @Html.ValidationMessageFor(model => model.answerText)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.observerStatusValue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.observerStatusValue)
            @Html.ValidationMessageFor(model => model.observerStatusValue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.countermeasureId1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.countermeasureId1)
            @Html.ValidationMessageFor(model => model.countermeasureId1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.countermeasureId2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.countermeasureId2)
            @Html.ValidationMessageFor(model => model.countermeasureId2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.countermeasureId3)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.countermeasureId3)
            @Html.ValidationMessageFor(model => model.countermeasureId3)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.observerComment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.observerComment)
            @Html.ValidationMessageFor(model => model.observerComment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.observerCommentDateAndTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.observerCommentDateAndTime)
            @Html.ValidationMessageFor(model => model.observerCommentDateAndTime)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.supervisorComment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.supervisorComment)
            @Html.ValidationMessageFor(model => model.supervisorComment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.supervisorCommentDateAndTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.supervisorCommentDateAndTime)
            @Html.ValidationMessageFor(model => model.supervisorCommentDateAndTime)
        </div>

        <input type="submit" value="Save" class="small round button success" />
    </fieldset>
}

@Html.ActionLink("Back to List", "Index", null, new { @class="small button secondary" })

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
